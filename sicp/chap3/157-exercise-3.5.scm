(load "monte-carlo.scm")

(define (estimate-integral p x1 x2 y1 y2 trials) 
    (define (random-in-range low high)
        (let ((range (- high low)))
             (+ low (random (exact->inexact range)))))
    (define (in-area-experiment?)
        (let ((x (random-in-range x1 x2))
	      (y (random-in-range y1 y2)))
             (p x y)))
    (* (monte-carlo trials in-area-experiment?)
       (* (abs (- x1 x2))
	  (abs (- y1 y2)))))

(define (estimate-pi trials)
    (define (square x) (* x x))
    (define (p? x y)
        (<= (+ (square (- x 1.0))
               (square (- y 1.0)))
             1.0))
    (exact->inexact (estimate-integral p? 0.0 2.0 0.0 2.0 trials)))
