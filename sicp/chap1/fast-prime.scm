(define (expmod base expr m)
   (cond ((= expr 0) 1)
         ((even? expr) (remainder (square (expmod base (/ expr 2) m))
                                   m))
         (else (remainder (* base (expmod base (- expr 1) m))
                          m))))

(define (fermat-test n)
   (define (try-it a)
     (= (expmod a n n) a))
   (try-it (+ 1 (random (- n 1)))))

(define (fast-prime? n times)
   (cond ((= times 0) #t)
         ((fermat-test n) (fast-prime? n (- times 1)))
         (else #f)))
